Choose the Right Chart Type
Here‚Äôs a chart guide based on the type of data you want to analyze:

Goal	Chart Type	Library
Frequency of categories	Bar chart	Seaborn, Matplotlib
Value comparison across categories	Grouped bar chart	Seaborn
Data distribution	Histogram, KDE plot	Seaborn
Relationships between two variables	Scatter plot	Seaborn
Correlation between variables	Heatmap	Seaborn
Composition (part of whole)	Pie chart	Matplotlib
Time series / trend over time	Line plot	Matplotlib, Seaborn
Distribution across categories	Box plot, Violin plot	Seaborn
Geographical data	Choropleth map, scatter geo	Plotly or GeoPandas

üîß Step 3: Sample Code Snippets
1. Bar Chart (e.g., Top 10 countries by happiness score)
python
Copy
Edit
import seaborn as sns
import matplotlib.pyplot as plt

top_countries = df.sort_values("Happiness Score", ascending=False).head(10)
sns.barplot(data=top_countries, x="Happiness Score", y="Country")
plt.title("Top 10 Happiest Countries")
plt.show()
2. Histogram (e.g., Distribution of GDP)
python
Copy
Edit
sns.histplot(df["GDP per capita"], bins=20, kde=True)
plt.title("GDP per Capita Distribution")
plt.show()
3. Scatter Plot (e.g., GDP vs Happiness)
python
Copy
Edit
sns.scatterplot(data=df, x="GDP per capita", y="Happiness Score")
plt.title("GDP vs Happiness Score")
plt.show()
4. Heatmap (e.g., Correlation matrix)
python
Copy
Edit
correlation = df.corr(numeric_only=True)
sns.heatmap(correlation, annot=True, cmap="coolwarm")
plt.title("Correlation Matrix")
plt.show()
5. Box Plot (e.g., Happiness score by region)
python
Copy
Edit
sns.boxplot(data=df, x="Region", y="Happiness Score")
plt.xticks(rotation=90)
plt.title("Happiness Score Distribution by Region")
plt.show()
6. Line Plot (e.g., Happiness score trend over years per country)
python
Copy
Edit
df_country = df[df['Country'] == 'India']
sns.lineplot(data=df_country, x="Year", y="Happiness Score")
plt.title("India's Happiness Score Over Time")
plt.show()
üõ† Tools You Can Use:
Matplotlib ‚Äì good for basic plotting

Seaborn ‚Äì built on Matplotlib, better aesthetics, ideal for EDA

Plotly ‚Äì for interactive plots (especially maps and dashboards)

Pandas ‚Äì for quick .plot() based charts

GeoPandas or folium ‚Äì for geographical maps (if working with lat/long or countries)


üìä 1. Bar Chart
Use When: You want to show how often a category appears (frequency).

Example: Count of movies in each genre

python
Copy
Edit
sns.countplot(data=df, x="Genre")
‚úÖ Best for categorical variables like country, region, gender.

üìä 2. Grouped Bar Chart
Use When: You want to compare values across categories and subcategories.

Example: Average exam score by gender and subject

python
Copy
Edit
sns.barplot(data=df, x="Subject", y="Score", hue="Gender")
‚úÖ Best for multi-category comparison.

üìà 3. Histogram
Use When: You want to see how a numerical variable is distributed.

Example: Distribution of GDP per capita

python
Copy
Edit
sns.histplot(df["GDP"], bins=20, kde=False)
‚úÖ Shows how values are spread across ranges.

üåä 4. KDE Plot (Kernel Density Estimate)
Use When: You want a smooth curve to show data distribution.

Example: Smooth distribution of happiness scores

python
Copy
Edit
sns.kdeplot(df["Happiness Score"])
‚úÖ Gives an idea of where most values lie.

üîò 5. Scatter Plot
Use When: You want to find relationship/correlation between two continuous variables.

Example: GDP vs Happiness Score

python
Copy
Edit
sns.scatterplot(data=df, x="GDP", y="Happiness Score")
‚úÖ Good for spotting trends, clusters, or outliers.

üß† 6. Heatmap
Use When: You want to show correlations or patterns in a matrix of values.

Example: Correlation between multiple numeric columns

python
Copy
Edit
sns.heatmap(df.corr(), annot=True, cmap="coolwarm")
‚úÖ Ideal for finding relationships between variables quickly.

üç∞ 7. Pie Chart
Use When: You want to show how each part contributes to a whole (composition).

Example: Percentage of students by stream

python
Copy
Edit
df['Stream'].value_counts().plot.pie(autopct='%1.1f%%')
‚úÖ Use only for simple, clear comparisons.

üìâ 8. Line Plot
Use When: You want to track changes over time.

Example: Annual temperature changes

python
Copy
Edit
sns.lineplot(data=df, x="Year", y="AvgTemp")
‚úÖ Best for time series and trend analysis.

üì¶ 9. Box Plot
Use When: You want to see data spread and outliers across groups.

Example: Score distributions by gender

python
Copy
Edit
sns.boxplot(data=df, x="Gender", y="Score")
‚úÖ Shows median, quartiles, and outliers.

üéª 10. Violin Plot
Use When: You want to see both distribution and box plot in one.

Example: Income distribution by education level

python
Copy
Edit
sns.violinplot(data=df, x="Education", y="Income")
‚úÖ Combines KDE + Box Plot ‚Äî great for deeper distribution insights.

üó∫Ô∏è 11. Choropleth Map / Geo Scatter Plot
Use When: You have location-based data (like countries or coordinates).

Example: Visualizing CO‚ÇÇ emissions by country

python
Copy
Edit
import plotly.express as px
fig = px.choropleth(df, locations='Country', locationmode='country names', color='CO2')
fig.show()
‚úÖ Best for world maps or lat/lon based data.

Summary Table Again (Visual Style):
Goal	Chart Type	Library	Use It For...
Frequency of categories	Bar chart	Seaborn, Matplotlib	Count how often a category appears
Compare values in subcategories	Grouped bar chart	Seaborn	Gender vs scores, region vs income
See value distribution	Histogram, KDE	Seaborn	Spread of ages, GDPs, scores
Show variable relationship	Scatter plot	Seaborn	Income vs life expectancy, GDP vs CO‚ÇÇ
Show correlation matrix	Heatmap	Seaborn	Correlations between many columns
Show parts of a whole	Pie chart	Matplotlib	% of each food type, % by stream
Track changes over time	Line plot	Seaborn, Matplotlib	Stock prices, temperatures, COVID trends
Show spread and outliers	Box plot	Seaborn	Income by city, scores by subject
Show distribution + shape	Violin plot	Seaborn	Income distribution across education levels
Show data on maps	Choropleth, Geo scatter	Plotly, GeoPandas	Values per country, city, region

